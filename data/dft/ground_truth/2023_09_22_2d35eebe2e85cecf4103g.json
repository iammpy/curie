{"code": "from ase import Atoms\nfrom ase.calculators.vasp import Vasp\nfrom ase.optimize import BFGS\nfrom pydantic import BaseModel\n\nfrom annotations.models.StructureMetadata import StructureMetadata\nfrom annotations.models.VaspParameters import VaspParameters\n\n# Functions Code\n\n\n\ndef structure_generation_a97de368e5a5385f6ef93051d2ba9511bb4f636a(\n    parameters: StructureMetadata,\n) -> Atoms:\n    pass\n\n\ndef vasp_geometric_relaxation(atoms: Atoms, parameters: VaspParameters) -> Atoms:\n    vasp_keys = [\n        \"command\",\n        \"restart\",\n        \"xc\",\n        \"setups\",\n        \"pp\",\n        \"kpts\",\n        \"gamma\",\n        \"reciprocal\",\n        \"charge\",\n        \"prec\",\n        \"encut\",\n        \"ediff\",\n        \"nbands\",\n        \"algo\",\n        \"ismear\",\n        \"sigma\",\n        \"nelm\",\n    ]\n    vasp_dict = {\n        k: v for k, v in parameters.dict(exclude_none=True).items() if k in vasp_keys\n    }\n    calc = Vasp(**vasp_dict)\n    atoms.set_calculator(calc)\n    dyn = BFGS(atoms)\n    dyn.run(parameters.fmax)\n    return atoms\n\n\ndef get_band_structure(atoms: Atoms):\n    return atoms.calc.band_structure()\n\n\n# Inputs Code\n\n\n\nclass VaspParameters(BaseModel):\n    id: str | None = None\n    command: str | None = None\n    txt: str | None = None\n    restart: bool | None = None\n    xc: str | None = None\n    setups: str | None = None\n    pp: str | None = None\n    kpts: str | tuple[int] | None = None\n    gamma: str | None = None\n    reciprocal: str | None = None\n    charge: int | None = None\n    prec: str | None = None\n    encut: float | None = None\n    ediff: float | None = None\n    nbands: int | None = None\n    algo: str | None = None\n    ismear: int | None = None\n    sigma: float | None = None\n    nelm: int | None = None\n    fmax: float | None = None\n\n\n\nclass StructureMetadata(BaseModel):\n    id: str | None = None\n    name: str | None = None\n    type: str | None = None\n    composition: str | None = None\n    description: str | None = None\n    vacuum_x: float | None = None\n    vacuum_y: float | None = None\n    vacuum_z: float | None = None\n    supercell: str | None = None\n    cas_number: str | None = None\n    orientation: str | None = None\n    lattice_a: float | None = None\n    lattice_b: float | None = None\n    lattice_c: float | None = None\n    orientation: str | None = None\n    mp_id: str | None = None\n\nstructure_metadata_barium_postassium_bismuthate = StructureMetadata.parse_raw('{\"name\": \"barium postassium bismuthate\", \"type\": NaN, \"composition\": \"Ba0.51K0.49BiO3\", \"description\": \"crystal lattice\", \"vacuum_x\": NaN, \"vacuum_y\": NaN, \"vacuum_z\": NaN, \"supercell\": NaN, \"cas_number\": NaN, \"lattice_a\": 4.27, \"lattice_b\": NaN, \"lattice_c\": NaN, \"space group\": NaN, \"orientation\": \"simple cubic perovskite\", \"mp_id\": NaN}')\n\ndft_parameter_set_3 = VaspParameters.parse_raw('{\"command\": NaN, \"restart\": NaN, \"xc\": \"HSE06\", \"setups\": NaN, \"pp\": NaN, \"kpts\": \"[20, 20, 20]\", \"gamma\": NaN, \"reciprocal\": NaN, \"charge\": NaN, \"prec\": NaN, \"encut\": 500.0, \"ediff\": NaN, \"nbands\": NaN, \"algo\": NaN, \"ismear\": NaN, \"sigma\": NaN, \"nelm\": NaN}')\n\ndft_parameter_set_4 = VaspParameters.parse_raw('{\"command\": NaN, \"restart\": NaN, \"xc\": \"PBE\", \"setups\": NaN, \"pp\": NaN, \"kpts\": \"[20, 20, 20]\", \"gamma\": NaN, \"reciprocal\": NaN, \"charge\": NaN, \"prec\": NaN, \"encut\": 500.0, \"ediff\": NaN, \"nbands\": NaN, \"algo\": NaN, \"ismear\": NaN, \"sigma\": NaN, \"nelm\": NaN}')\n\n# Execution Code\n\ninitial_structure = structure_generation_a97de368e5a5385f6ef93051d2ba9511bb4f636a(structure_metadata_barium_postassium_bismuthate)\nrelaxed_structure_hse = vasp_geometric_relaxation(initial_structure, dft_parameter_set_3)\nrelaxed_structure_pbe = vasp_geometric_relaxation(initial_structure, dft_parameter_set_4)\nband_structure_hse = get_band_structure(relaxed_structure_hse)\nband_structure_pbe = get_band_structure(relaxed_structure_pbe)\n", "graph_as_text": "[{\"description\": \"returns a structure of Ba0.51K0.49BiO3 as an ase atoms object\", \"function_id\": \"process_63\", \"function_name\": \"structure_generation_a97de368e5a5385f6ef93051d2ba9511bb4f636a\", \"input_types\": [\"StructureMetadata\"], \"inputs\": [\"structure_metadata_barium_postassium_bismuthate\"], \"output_types\": [\"Atoms\"], \"outputs\": [\"initial_structure\"], \"process_type\": \"structure_generation\"}, {\"description\": \"runs a dft geometric relaxation using ase and vasp and returns the atoms object from the import parameters specified in a pydantic basemodel called VaspParameters and an input ase atoms object\", \"function_id\": \"process_64\", \"function_name\": \"vasp_geometric_relaxation\", \"input_types\": [\"Atoms\", \"VaspParameters\"], \"inputs\": [\"initial_structure\", \"dft_parameter_set_3\"], \"output_types\": [\"Atoms\"], \"outputs\": [\"relaxed_structure_hse\"], \"process_type\": \"dft\"}, {\"description\": \"runs a dft geometric relaxation using ase and vasp and returns the atoms object from the import parameters specified in a pydantic basemodel called VaspParameters and an input ase atoms object\", \"function_id\": \"process_65\", \"function_name\": \"vasp_geometric_relaxation\", \"input_types\": [\"Atoms\", \"VaspParameters\"], \"inputs\": [\"initial_structure\", \"dft_parameter_set_4\"], \"output_types\": [\"Atoms\"], \"outputs\": [\"relaxed_structure_pbe\"], \"process_type\": \"dft\"}, {\"description\": \"gets the band structure from an ase atoms object after DFT has been run\", \"function_id\": \"process_66\", \"function_name\": \"get_band_structure\", \"input_types\": [\"Atoms\"], \"inputs\": [\"relaxed_structure_hse\"], \"output_types\": [\"BandStructure\"], \"outputs\": [\"band_structure_hse\"], \"process_type\": \"analysis\"}, {\"description\": \"gets the band structure from an ase atoms object after DFT has been run\", \"function_id\": \"process_67\", \"function_name\": \"get_band_structure\", \"input_types\": [\"Atoms\"], \"inputs\": [\"relaxed_structure_pbe\"], \"output_types\": [\"BandStructure\"], \"outputs\": [\"band_structure_pbe\"], \"process_type\": \"analysis\"}]", "no_header_code": "from ase import Atoms\nfrom ase.calculators.vasp import Vasp\nfrom ase.optimize import BFGS\nfrom pydantic import BaseModel\n\nfrom annotations.models.StructureMetadata import StructureMetadata\nfrom annotations.models.VaspParameters import VaspParameters\n\n# Functions Code\n\n\n\ndef vasp_geometric_relaxation(atoms: Atoms, parameters: VaspParameters) -> Atoms:\n    vasp_keys = [\n        \"command\",\n        \"restart\",\n        \"xc\",\n        \"setups\",\n        \"pp\",\n        \"kpts\",\n        \"gamma\",\n        \"reciprocal\",\n        \"charge\",\n        \"prec\",\n        \"encut\",\n        \"ediff\",\n        \"nbands\",\n        \"algo\",\n        \"ismear\",\n        \"sigma\",\n        \"nelm\",\n    ]\n    vasp_dict = {\n        k: v for k, v in parameters.dict(exclude_none=True).items() if k in vasp_keys\n    }\n    calc = Vasp(**vasp_dict)\n    atoms.set_calculator(calc)\n    dyn = BFGS(atoms)\n    dyn.run(parameters.fmax)\n    return atoms\n\n\ndef structure_generation_a97de368e5a5385f6ef93051d2ba9511bb4f636a(\n    parameters: StructureMetadata,\n) -> Atoms:\n    pass\n\n\ndef get_band_structure(atoms: Atoms):\n    return atoms.calc.band_structure()\n\n\n# Inputs Code\n\n\n\nclass StructureMetadata(BaseModel):\n    id: str | None = None\n    name: str | None = None\n    type: str | None = None\n    composition: str | None = None\n    description: str | None = None\n    vacuum_x: float | None = None\n    vacuum_y: float | None = None\n    vacuum_z: float | None = None\n    supercell: str | None = None\n    cas_number: str | None = None\n    orientation: str | None = None\n    lattice_a: float | None = None\n    lattice_b: float | None = None\n    lattice_c: float | None = None\n    orientation: str | None = None\n    mp_id: str | None = None\n\n\n\nclass VaspParameters(BaseModel):\n    id: str | None = None\n    command: str | None = None\n    txt: str | None = None\n    restart: bool | None = None\n    xc: str | None = None\n    setups: str | None = None\n    pp: str | None = None\n    kpts: str | tuple[int] | None = None\n    gamma: str | None = None\n    reciprocal: str | None = None\n    charge: int | None = None\n    prec: str | None = None\n    encut: float | None = None\n    ediff: float | None = None\n    nbands: int | None = None\n    algo: str | None = None\n    ismear: int | None = None\n    sigma: float | None = None\n    nelm: int | None = None\n    fmax: float | None = None\n\nstructure_metadata_barium_postassium_bismuthate = StructureMetadata.parse_raw('{\"name\": \"barium postassium bismuthate\", \"type\": NaN, \"composition\": \"Ba0.51K0.49BiO3\", \"description\": \"crystal lattice\", \"vacuum_x\": NaN, \"vacuum_y\": NaN, \"vacuum_z\": NaN, \"supercell\": NaN, \"cas_number\": NaN, \"lattice_a\": 4.27, \"lattice_b\": NaN, \"lattice_c\": NaN, \"space group\": NaN, \"orientation\": \"simple cubic perovskite\", \"mp_id\": NaN}')\n\ndft_parameter_set_3 = VaspParameters.parse_raw('{\"command\": NaN, \"restart\": NaN, \"xc\": \"HSE06\", \"setups\": NaN, \"pp\": NaN, \"kpts\": \"[20, 20, 20]\", \"gamma\": NaN, \"reciprocal\": NaN, \"charge\": NaN, \"prec\": NaN, \"encut\": 500.0, \"ediff\": NaN, \"nbands\": NaN, \"algo\": NaN, \"ismear\": NaN, \"sigma\": NaN, \"nelm\": NaN}')\n\ndft_parameter_set_4 = VaspParameters.parse_raw('{\"command\": NaN, \"restart\": NaN, \"xc\": \"PBE\", \"setups\": NaN, \"pp\": NaN, \"kpts\": \"[20, 20, 20]\", \"gamma\": NaN, \"reciprocal\": NaN, \"charge\": NaN, \"prec\": NaN, \"encut\": 500.0, \"ediff\": NaN, \"nbands\": NaN, \"algo\": NaN, \"ismear\": NaN, \"sigma\": NaN, \"nelm\": NaN}')\n\n# Execution Code\n\ninitial_structure = structure_generation_a97de368e5a5385f6ef93051d2ba9511bb4f636a(structure_metadata_barium_postassium_bismuthate)\nrelaxed_structure_hse = vasp_geometric_relaxation(initial_structure, dft_parameter_set_3)\nrelaxed_structure_pbe = vasp_geometric_relaxation(initial_structure, dft_parameter_set_4)\nband_structure_hse = get_band_structure(relaxed_structure_hse)\nband_structure_pbe = get_band_structure(relaxed_structure_pbe)\n", "record_id": "2023_09_22_2d35eebe2e85cecf4103g"}